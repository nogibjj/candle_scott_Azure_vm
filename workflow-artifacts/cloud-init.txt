#!/bin/bash


# Define a working directory
WORK_DIR="/opt/actions-runner"

chown -R runner $WORK_DIR

# Configure the runner
su - runner -c "$WORK_DIR/config.sh --unattended --url https://github.com/nogibjj/candle_scott_Azure_vm --token $RUNNER_TOKEN"

# Schedule the runner to start immediately but in the background
nohup su - runner -c "$WORK_DIR/run.sh" &


set -e

apt-get update
apt-get install -y build-essential pkg-config libssl-dev protobuf-compiler jq
        

# Git and LFS setup
export HOME=/root
curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash
apt-get install git-lfs
git lfs install

# Check available disk space
df -h

# Install Rust
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y;
source "$HOME/.cargo/env"

# Using the bash shell to source the environment variables
git clone https://github.com/huggingface/candle.git;
cd candle;

# Get the current directory which is the project directory
cargo build --example whisper --release || echo 'cargo build failed.';

# # Define the binary directory based on the project directory
# BINARY_DIR="$PROJECT_DIR/target/release/examples"
# echo "Binary directory: $BINARY_DIR"

# Navigate to the binary directory
git init
git config --global user.email "scott.lai@duke.edu"
git config --global user.name "scottLL"
git remote add origin https://github.com/nogibjj/candle_scott_Azure_vm.git
echo 'target/release/examples/whisper filter=lfs diff=lfs merge=lfs -text' > .gitattributes
git lfs track "target/release/examples/whisper"
git add whisper .gitattributes
git commit -m 'Add whisper binary'
git push -u origin main