#!/bin/bash

# Define a working directory
export HOME=/root
WORK_DIR="/opt/actions-runner"

chown -R runner $WORK_DIR

# Configure the runner
su - runner -c "$WORK_DIR/config.sh --unattended --url https://github.com/nogibjj/candle_scott_Azure_vm --token $RUNNER_TOKEN"

# Schedule the runner to start immediately but in the background
nohup su - runner -c "$WORK_DIR/run.sh" &

# Updating system packages
apt-get update

# Installing necessary dependencies
apt-get install -y build-essential pkg-config libssl-dev protobuf-compiler jq git-lfs

# Setting up Git LFS
git lfs install

# Installing Rust
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
export PATH="$HOME/.cargo/bin:$PATH"

# Building the project
if cargo build --example whisper --release; then
  # Navigate back to the root of the candle project
  cd /root/candle

  # Git configuration and committing the binary
  git init
  git checkout -b main
  git config --global user.email "scott.lai@duke.edu"
  git config --global user.name "scottLL"
  git remote add origin https://github.com/nogibjj/candle_scott_Azure_vm.git

  # Set up .gitattributes for LFS
  echo 'target/release/examples/whisper filter=lfs diff=lfs merge=lfs -text' > .gitattributes
  git lfs track "target/release/examples/whisper"

  # Add and commit changes
  git add target/release/examples/whisper .gitattributes
  git commit -m 'Add whisper binary'
  
  # Push to the main branch
  git push -u origin main
else
  echo "Cargo build failed."
fi