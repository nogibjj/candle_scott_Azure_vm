name: Candle Image Task

on:
  repository_dispatch:
    types: [candle-image-task]
  workflow_dispatch:
    inputs:
      vm_name:
        description: 'Name of the VM to run tasks on'
        required: true

jobs:
  run-candle-image-task:
    runs-on: ubuntu-latest
    steps:
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: Run Candle Image Task
      env:
        STORAGE_ACCOUNT_KEY: ${{ secrets.STORAGE_ACCOUNT_KEY }}
        PAT: ${{ secrets.PAT }}
      run: |
        VM_NAME="${{ github.event.client_payload.vm_name || github.event.inputs.vm_name }}"
        OUTPUT=$(az vm run-command invoke\
            --resource-group githubVM \
            --name "$VM_NAME" \
            --command-id RunShellScript \
            --scripts "
                #!/bin/bash
                set -e
                # Install C compiler and related tools
                apt-get update
                apt-get install -y build-essential pkg-config libssl-dev protobuf-compiler jq

                # Check available disk space
                df -h

                # Install Rust
                curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
                CARGO_HOME='/root/.cargo'
                RUSTUP_HOME='/root/.rustup'
                echo \"CARGO_HOME: \$CARGO_HOME\"
                echo \"RUSTUP_HOME: \$RUSTUP_HOME\"

                if [ -d \"\$CARGO_HOME/bin\" ]; then
                    echo '.cargo/bin directory exists.'
                    ls -alh \"\$CARGO_HOME/bin\"
                else
                    echo '.cargo/bin directory NOT found.'
                    exit 1
                fi

                /bin/bash -c \"source \$CARGO_HOME/env\"
                rustc --version || { echo 'Rust installation failed'; exit 1; }
                cargo --version || { echo 'Cargo installation failed'; exit 1; }

                # Clone and build the project
                git clone https://github.com/huggingface/candle.git
                cd candle
                cargo build --example whisper --release || { echo 'cargo build failed'; exit 1; }

                # Navigate to the build directory
                cd target/release/examples
                if [ -f whisper ]; then
                    echo 'Whisper binary compiled successfully'
                else
                    echo 'Whisper binary compilation failed'
                    exit 1
                fi

                # Git and LFS setup
                export HOME=/root
                curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash
                apt-get install git-lfs
                git lfs install
                git init
                git config --global user.email \"scott.lai@duke.edu\"
                git config --global user.name \"scottLL\"
                git remote add origin https://github.com/nogibjj/candle_scott_Azure_vm.git

                # Track and commit LFS files
                echo \"target/release/examples/whisper filter=lfs diff=lfs merge=lfs -text\" > .gitattributes
                git lfs track \"target/release/examples/whisper\"
                git add target/release/examples/whisper .gitattributes
                git commit -m 'Add whisper binary'
                git push -u origin main || { echo 'Failed to push the binary to Git LFS'; exit 1; }
                " \
            --parameters STORAGE_ACCOUNT_KEY="$STORAGE_ACCOUNT_KEY" \
            --query "value[].message" --output tsv)
        echo "Command Output:"
        echo "$OUTPUT"
