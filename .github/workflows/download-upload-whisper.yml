name: Check and Transfer Whisper Binary

on:
  workflow_dispatch:
    inputs:
      vm_name:
        description: 'Name of the VM to run tasks on'
        required: true
      vm_ip:
        description: 'Public IP address of the VM'
        required: true

jobs:
  check-download-upload:
    runs-on: ubuntu-latest

    steps:
      - name: Find Whisper Binary in VM
        run: |
          # Find the whisper binary in the VM's file system
          ssh -o StrictHostKeyChecking=no $VM_USER@$VM_IP "find / -type f -name whisper 2>/dev/null"
        shell: /usr/bin/bash --noprofile --norc -e -o pipefail {0}
        env:
          VM_USER: runner
          VM_IP: ${{ github.event.inputs.vm_ip }}

      - name: Find Candle Directory in VM
        run: |
          # Find the candle directory in the VM's file system
          ssh -o StrictHostKeyChecking=no $VM_USER@$VM_IP "find / -type d -name candle 2>/dev/null"
        shell: /usr/bin/bash --noprofile --norc -e -o pipefail {0}
        env:
          VM_USER: runner
          VM_IP: ${{ github.event.inputs.vm_ip }}

      - name: Check Whisper Binary Exists After Build
        env:
          VM_USER: runner
          VM_IP: ${{ github.event.inputs.vm_ip }}
          SSH_PRIVATE_KEY: ${{ secrets.VM_SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          
          # Check if Whisper binary exists right after build
          # Replace this with the actual build output directory from the build step
          ssh -o StrictHostKeyChecking=no $VM_USER@$VM_IP "ls -l ~/candle/target/release/examples/whisper"
        shell: bash

      - name: Check Whisper Binary Exists in Expected Directory
        if: success() # Only runs if the previous step was successful
        env:
          VM_USER: runner
          VM_IP: ${{ github.event.inputs.vm_ip }}
          SSH_PRIVATE_KEY: ${{ secrets.VM_SSH_PRIVATE_KEY }}
        run: |
          # SSH into the VM and list the contents of the directory
          ssh -o StrictHostKeyChecking=no $VM_USER@$VM_IP "ls -l /candle/target/release/examples/"
          
          # If the file is not found, use find command to search across the filesystem
          if ssh -o StrictHostKeyChecking=no $VM_USER@$VM_IP "test ! -f /candle/target/release/examples/whisper"; then
            echo "The whisper binary was not found at the specified path. Searching the entire filesystem..."
            ssh -o StrictHostKeyChecking=no $VM_USER@$VM_IP "find / -type f -name whisper"
          else
            echo "Whisper binary exists at the specified path."
          fi
        shell: bash

      - name: Download Whisper Binary
        if: success() # Only runs if the previous step was successful
        env:
          VM_USER: runner
          VM_IP: ${{ github.event.inputs.vm_ip }}
          SSH_PRIVATE_KEY: ${{ secrets.VM_SSH_PRIVATE_KEY }}
        run: |
          # Use SCP to copy the binary from VM to the GitHub runner
          scp -o StrictHostKeyChecking=no $VM_USER@$VM_IP:/candle/target/release/examples/whisper .
        shell: bash

      - name: Upload Whisper Binary
        if: success() # Only runs if the previous step was successful
        uses: actions/upload-artifact@v2
        with:
          name: whisper-binary
          path: ./whisper
