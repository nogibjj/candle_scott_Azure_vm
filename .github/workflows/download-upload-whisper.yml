name: Check and Transfer Whisper Binary

on:
  workflow_dispatch:
    inputs:
      vm_name:
        description: 'Name of the VM to run tasks on'
        required: true
      vm_ip:
        description: 'Public IP address of the VM'
        required: true

jobs:
  check-download-upload:
    runs-on: ubuntu-latest
    env:
      VM_USER: runner
      VM_IP: ${{ github.event.inputs.vm_ip }}
      SSH_PRIVATE_KEY: ${{ secrets.VM_SSH_PRIVATE_KEY }}
      # CANDLE_DIR: /opt/actions-runner/candle # Define the known directory path from Find Candle Directory in VM as an environment variable
    steps:
      - name: Setup SSH Key and Permissions
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $VM_IP >> ~/.ssh/known_hosts
        shell: bash

      - name: Check SSH Connection
        run: ssh -vvv -o StrictHostKeyChecking=no $VM_USER@$VM_IP "echo 'SSH connection successful'"
        shell: bash
      
      # - name: Find Candle Directory in VM
      #   run: ssh -o StrictHostKeyChecking=no $VM_USER@$VM_IP "find / -type d -name candle 2>/dev/null"
      #   shell: bash

      # - name: Check Whisper Binary in VM
      #   # run: ssh -o StrictHostKeyChecking=no $VM_USER@$VM_IP "ls -l ~/candle/target/release/examples/whisper"
      #   run: ssh -o StrictHostKeyChecking=no $VM_USER@$VM_IP "find / -type d -name whisper 2>/dev/null"
      #   shell: bash


      # - name: Find Whisper Binary in VM
      #   run: |
      #     WHISPER_PATHS=$(ssh -o StrictHostKeyChecking=no $VM_USER@$VM_IP "find / -type f -name whisper 2>/dev/null" || echo "find_error")
      #     if [[ "$WHISPER_PATHS" == "find_error" ]]; then
      #       echo "Error executing find command on the VM."
      #       exit 1
      #     fi
      #     if [[ -z "$WHISPER_PATHS" ]]; then
      #       echo "The whisper binary was not found on the VM."
      #       exit 1
      #     fi
      #     # Handling potential multiple paths
      #     IFS=$'\n' read -rd '' -a WHISPER_ARRAY <<< "$WHISPER_PATHS"
      #     if (( ${#WHISPER_ARRAY[@]} > 1 )); then
      #       echo "Multiple whisper binaries found:"
      #       printf '%s\n' "${WHISPER_ARRAY[@]}"
      #       # Choose the correct binary path, here assuming the first one
      #       WHISPER_PATH=${WHISPER_ARRAY[0]}
      #     else
      #       WHISPER_PATH=$WHISPER_PATHS
      #     fi
      #     CANDLE_DIR=$(dirname "$WHISPER_PATH")
      #     echo "CANDLE_DIR is set to $CANDLE_DIR"
      #   shell: bash
    
      - name: Verify Whisper Binary in VM
        run: |
          if ssh -o StrictHostKeyChecking=no $VM_USER@$VM_IP "test -f /root/candle/target/release/examples/whisper"; then
            echo "Whisper binary exists at /root/candle/target/release/examples/whisper."
          else
            echo "The whisper binary was not found at the expected location."
            exit 1
          fi
        shell: bash


      - name: Check Whisper Binary Exists in Known Directory
        run: |
          if ssh -o StrictHostKeyChecking=no $VM_USER@$VM_IP "test -f $CANDLE_DIR/target/release/examples/whisper"; then
            echo "Whisper binary exists in the known directory."
          else
            echo "The whisper binary was not found in the known directory."
            exit 1
          fi
        shell: bash

      - name: Download Whisper Binary
        run: scp -o StrictHostKeyChecking=no $VM_USER@$VM_IP:$CANDLE_DIR/target/release/examples/whisper .
        shell: bash

      - name: Upload Whisper Binary to GitHub Artifact Storage
        uses: actions/upload-artifact@v2
        with:
          name: whisper-binary
          path: ./whisper





